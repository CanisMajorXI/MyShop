<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jzm.dao.base.MerchandiseBaseMapper">


    <insert id="insertMerchandise"  useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `merchandise`
        (
        <trim suffixOverrides=",">
                    <if test="id!=null">
                        `id`,
                    </if>
                    <if test="typeId!=null">
                        `type_id`,
                    </if>
                    <if test="productDate!=null">
                        `product_date`,
                    </if>
                    <if test="valid!=null">
                        `valid`,
                    </if>
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
                <if test="id!=null">
                    #{id},
                </if>
                <if test="typeId!=null">
                    #{typeId},
                </if>
                <if test="productDate!=null">
                    #{productDate},
                </if>
                <if test="valid!=null">
                    #{valid},
                </if>
        </trim>
        )
    </insert>




    <update id="updateMerchandise">
        UPDATE `merchandise`
        SET
        <trim suffixOverrides=",">
            <if test="typeId != null">
                `type_id` = #{typeId},
            </if>
            <if test="productDate != null">
                `product_date` = #{productDate},
            </if>
            <if test="valid != null">
                `valid` = #{valid},
            </if>
        </trim>
        WHERE
        <trim suffixOverrides="and">
                `id` = #{id} and
        </trim>
    </update>

    <update id="update">
        UPDATE `merchandise`
        SET
        <trim suffixOverrides=",">
        <if test="set.typeId != null">
            `type_id` = #{set.typeId},
        </if>
        <if test="set.productDate != null">
            `product_date` = #{set.productDate},
        </if>
        <if test="set.valid != null">
            `valid` = #{set.valid},
        </if>
        </trim>
        <trim prefix="where" suffixOverrides="and | or">
                <if test="where.idList != null">
                    `id` in
                    <foreach collection="where.idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.idSt !=null">
                `id` >= #{where.idSt} and
            </if>
            <if test="where.idEd!=null">
                `id` &lt;= #{where.idEd} and
            </if>
                <if test="where.typeIdList != null">
                    `type_id` in
                    <foreach collection="where.typeIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.typeIdSt !=null">
                `type_id` >= #{where.typeIdSt} and
            </if>
            <if test="where.typeIdEd!=null">
                `type_id` &lt;= #{where.typeIdEd} and
            </if>
                <if test="where.productDateList != null">
                    `product_date` in
                    <foreach collection="where.productDateList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.productDateSt !=null">
                `product_date` >= #{where.productDateSt} and
            </if>
            <if test="where.productDateEd!=null">
                `product_date` &lt;= #{where.productDateEd} and
            </if>
                <if test="where.validList != null">
                    `valid` in
                    <foreach collection="where.validList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.validSt !=null">
                `valid` >= #{where.validSt} and
            </if>
            <if test="where.validEd!=null">
                `valid` &lt;= #{where.validEd} and
            </if>
        </trim>
    </update>


    <resultMap type="com.jzm.model.Merchandise" id="MerchandiseMap">
        <result property="id" column="id"/>
        <result property="typeId" column="type_id"/>
        <result property="productDate" column="product_date"/>
        <result property="valid" column="valid"/>
    </resultMap>


    <select id="queryMerchandise" resultMap="MerchandiseMap">
        select
        <include refid="baseResult"></include>
        from  `merchandise`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="typeId != null">
                `type_id` = #{typeId} and
            </if>
            <if test="productDate != null">
                `product_date` = #{productDate} and
            </if>
            <if test="valid != null">
                `valid` = #{valid} and
            </if>
            <if test = "(_parameter instanceof com.jzm.model.Merchandise$QueryBuilder) == true">
                <if test="idList != null">
                    `id` in
                    <foreach collection="idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                <if test="typeIdList != null">
                    `type_id` in
                    <foreach collection="typeIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="typeIdSt !=null">
                    `type_id` >= #{typeIdSt} and
                </if>
                <if test="typeIdEd!=null">
                    `type_id` &lt;= #{typeIdEd} and
                </if>
                <if test="productDateList != null">
                    `product_date` in
                    <foreach collection="productDateList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="productDateSt !=null">
                    `product_date` >= #{productDateSt} and
                </if>
                <if test="productDateEd!=null">
                    `product_date` &lt;= #{productDateEd} and
                </if>
                <if test="validList != null">
                    `valid` in
                    <foreach collection="validList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="validSt !=null">
                    `valid` >= #{validSt} and
                </if>
                <if test="validEd!=null">
                    `valid` &lt;= #{validEd} and
                </if>
            </if>
        </trim>
    </select>

    <select id="queryMerchandiseLimit1" resultMap="MerchandiseMap">
        select
        <include refid="baseResult"></include>
        from  `merchandise`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="typeId != null">
                `type_id` = #{typeId} and
            </if>
            <if test="productDate != null">
                `product_date` = #{productDate} and
            </if>
            <if test="valid != null">
                `valid` = #{valid} and
            </if>
            <if test = "(_parameter instanceof com.jzm.model.Merchandise$QueryBuilder) == true">
                    <if test="idList != null">
                        `id` in
                        <foreach collection="idList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                    <if test="typeIdList != null">
                        `type_id` in
                        <foreach collection="typeIdList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="typeIdSt !=null">
                    `type_id` >= #{typeIdSt} and
                </if>
                <if test="typeIdEd!=null">
                    `type_id` &lt;= #{typeIdEd} and
                </if>
                    <if test="productDateList != null">
                        `product_date` in
                        <foreach collection="productDateList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="productDateSt !=null">
                    `product_date` >= #{productDateSt} and
                </if>
                <if test="productDateEd!=null">
                    `product_date` &lt;= #{productDateEd} and
                </if>
                    <if test="validList != null">
                        `valid` in
                        <foreach collection="validList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="validSt !=null">
                    `valid` >= #{validSt} and
                </if>
                <if test="validEd!=null">
                    `valid` &lt;= #{validEd} and
                </if>
            </if>
        </trim>
        limit 1
    </select>

    <sql id="allResult">
        <trim suffixOverrides=",">
        `id`,
        `type_id`,
        `product_date`,
        `valid`+0 as `valid`,
        </trim>
    </sql>



    <sql id="baseResult">
        <trim suffixOverrides=",">
            <if test = "(_parameter instanceof com.jzm.model.Merchandise$QueryBuilder) == true">

                <if test="fetchFields==null">
                    <include refid="allResult"></include>
                </if>
                <if test="fetchFields!=null">
                    <if test="fetchFields.AllFields !=null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields ==null and fetchFields.fetchFields==null and fetchFields.excludeFields==null and fetchFields.otherFields==null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.fetchFields!=null">
                    <if test="fetchFields.fetchFields.id==true">
                        `id`,
                    </if>
                    <if test="fetchFields.fetchFields.typeId==true">
                        `type_id`,
                    </if>
                    <if test="fetchFields.fetchFields.productDate==true">
                        `product_date`,
                    </if>
                    <if test="fetchFields.fetchFields.valid==true">
                        `valid`+0 as `valid`,
                    </if>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.excludeFields!=null">
                    <if test="fetchFields.excludeFields.id==null">
                        `id`,
                    </if>
                    <if test="fetchFields.excludeFields.typeId==null">
                        `type_id`,
                    </if>
                    <if test="fetchFields.excludeFields.productDate==null">
                        `product_date`,
                    </if>
                    <if test="fetchFields.excludeFields.valid==null">
                        `valid`+0 as `valid`,
                    </if>
                    </if>
                    <if test="fetchFields.otherFields!=null and fetchFields.otherFields.size>0">
                        <foreach collection="fetchFields.otherFields" index="index" item="item" separator=",">
                        `#{item}`
                        </foreach>
                    </if>
                </if>
            </if>
            <if test="(_parameter instanceof com.jzm.model.Merchandise$QueryBuilder) == false" >
                <include refid="allResult"></include>
            </if>

        </trim>
    </sql>


</mapper>